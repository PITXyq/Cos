local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "LazyCosTrading V1.5 - By PITX", HidePremium = false, SaveConfig = true, ConfigFolder = "LazyCosTrading"})

local MainTab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local MiscTab = Window:MakeTab({
	Name = "Troll",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

-- New Scripts Tab
local ScriptsTab = Window:MakeTab({
	Name = "Scripts",
	Icon = "rbxassetid://4483345998", 
	PremiumOnly = false
})

-- Trade Section (Main Tab)
local TradeSection = MainTab:AddSection({
	Name = "Trade"
})

local tradeType = "Trading"
local targetUsername = ""

local function sendTradeRequest()
    local args = {
        [1] = tradeType,
        [2] = targetUsername
    }
    game:GetService("ReplicatedStorage").Remotes.AnnounceTradeRemote:InvokeServer(unpack(args))
end

local tradeLoop = false
local loopInterval = 1

TradeSection:AddToggle({
	Name = "Auto Trade",
	Default = false,
	Callback = function(Value)
		tradeLoop = Value
		if tradeLoop then
			while tradeLoop do
				sendTradeRequest()
				wait(loopInterval)
			end
		end
	end    
})

TradeSection:AddTextbox({
	Name = "Target Username",
	Default = targetUsername,
	TextDisappear = false,
	Callback = function(Value)
		targetUsername = Value
		print("Target Username changed to:", targetUsername)
	end	
})

TradeSection:AddLabel("Put the exact name of the creature")

TradeSection:AddDropdown({
	Name = "Trade Type",
	Default = tradeType,
	Options = {"Trading", "TradingFor"},
	Callback = function(Value)
		tradeType = Value
		print("Trade Type changed to:", tradeType)
	end
})

-- Loop Text Section (Main Tab)
local TextSection = MainTab:AddSection({
	Name = "Loop Text (15sec recommended)"
})

local customText = ""
local textLoop = false
local textLoopInterval = 15

local function sendCustomText()
    print("Sending custom text:", customText)
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(customText, "All")
end

TextSection:AddToggle({
	Name = "Loop Text",
	Default = false,
	Callback = function(Value)
		textLoop = Value
		if textLoop then
			while textLoop do
				sendCustomText()
				wait(textLoopInterval)
			end
		end
	end
})

TextSection:AddTextbox({
	Name = "Custom Text",
	Default = customText,
	TextDisappear = false,
	Callback = function(Value)
		customText = Value
		print("Custom text changed to:", customText)
	end
})

local options = {}
for i = 1, 50 do
	table.insert(options, tostring(i))
end

TextSection:AddDropdown({
	Name = "Delay (seconds)",
	Default = tostring(textLoopInterval),
	Options = options,
	Callback = function(Value)
		textLoopInterval = tonumber(Value)
		print("Text loop interval changed to:", textLoopInterval)
	end
})

-- Auto Accept Section (Main Tab)
local AutoAcceptSection = MainTab:AddSection({
	Name = "Auto Accept Requests"
})

local autoAcceptEnabled = false

AutoAcceptSection:AddToggle({
	Name = "Auto Accept",
	Default = false,
	Callback = function(Value)
		autoAcceptEnabled = Value
		if autoAcceptEnabled then
			while autoAcceptEnabled do
				for _, player in ipairs(game.Players:GetPlayers()) do
					local args = {
						[1] = "AcceptRequest"
					}
					local success, errorMessage = pcall(function()
						player.Remotes.TradeRequestRemote:FireServer(unpack(args))
					end)

					if success then
						print("Sent trade request to " .. player.Name)
					else
						warn("Failed to send trade request to " .. player.Name .. ": " .. errorMessage)
					end
					wait(0.01)
				end
			end  
		end
	end
})

-- FE Features Tab
local FETab = Window:MakeTab({
	Name = "FE Features",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

-- Anti-AFK Section (FE Features Tab)
local AntiAFKSection = FETab:AddSection({
	Name = "Anti-AFK"
})

local antiAFKEnabled = false

AntiAFKSection:AddToggle({
	Name = "Anti-AFK",
	Default = false,
	Callback = function(Value)
		antiAFKEnabled = Value
		if antiAFKEnabled then
			local VirtualInputManager = game:GetService("VirtualInputManager")
			while antiAFKEnabled do
				VirtualInputManager:SendMouseMovementEvent(0, 1, 0, game)
				wait(15)
				VirtualInputManager:SendMouseMovementEvent(0, -1, 0, game)
				wait(15)
			end
		end
	end
})


-- AutoTradeAll Section (Misc Tab)
local AutoTradeAllSection = MiscTab:AddSection({
	Name = "Auto Trade All"
})

local autoTradeAllEnabled = false

AutoTradeAllSection:AddToggle({
	Name = "Auto Trade All",
	Default = false,
	Callback = function(Value)
		autoTradeAllEnabled = Value
		if autoTradeAllEnabled then
			while autoTradeAllEnabled do
				for _, player in ipairs(game.Players:GetPlayers()) do
					if player ~= game.Players.LocalPlayer then
						local args = {
							[1] = "SendRequest",
							[2] = player
						}
						game:GetService("Players").LocalPlayer.Remotes.TradeRequestRemote:FireServer(unpack(args))
						wait(0.01)
					end
				end
			end
		end
	end
})


-- Auto Decline Section (Misc Tab)
local AutoDeclineSection = MiscTab:AddSection({
	Name = "Auto Decline Trades"
})

local autoDeclineEnabled = false

AutoDeclineSection:AddToggle({
	Name = "Auto Decline",
	Default = false,
	Callback = function(Value)
		autoDeclineEnabled = Value
		if autoDeclineEnabled then
			while autoDeclineEnabled do
				for _, player in ipairs(game.Players:GetPlayers()) do
					if player ~= game.Players.LocalPlayer then
						local args = {
							[1] = "DeclineTrade"
						}
						local success, errorMessage = pcall(function()
							game:GetService("ReplicatedStorage").Remotes:FindFirstChild("WhySoSerious0295-0Lunar_Eclipse09TradeRemote"):InvokeServer(unpack(args))
						end)

						if success then
							print("Declined trade from " .. player.Name)
						else
							warn("Failed to decline trade from " .. player.Name .. ": " .. errorMessage)
						end
						wait(0.01)
					end
				end
			end
		end
	end
})

-- Calculator Script (Scripts Tab)
local CalculatorSection = ScriptsTab:AddSection({
	Name = "Calculator"
})

CalculatorSection:AddButton({
	Name = "Open Calculator",
	Callback = function()
local Calculator = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local ButtonsFrame = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local UIGridLayout = Instance.new("UIGridLayout")
local _1 = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local UIPadding = Instance.new("UIPadding")
local _2 = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local _3 = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local TextButton = Instance.new("TextButton")
local UICorner_6 = Instance.new("UICorner")
local _4 = Instance.new("TextButton")
local UICorner_7 = Instance.new("UICorner")
local _5 = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local _6 = Instance.new("TextButton")
local UICorner_9 = Instance.new("UICorner")
local TextButton_2 = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local _7 = Instance.new("TextButton")
local UICorner_11 = Instance.new("UICorner")
local _8 = Instance.new("TextButton")
local UICorner_12 = Instance.new("UICorner")
local _9 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local TextButton_3 = Instance.new("TextButton")
local UICorner_14 = Instance.new("UICorner")
local _0 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TextButton_4 = Instance.new("TextButton")
local UICorner_16 = Instance.new("UICorner")
local TextButton_5 = Instance.new("TextButton")
local UICorner_17 = Instance.new("UICorner")
local TextButton_6 = Instance.new("TextButton")
local UICorner_18 = Instance.new("UICorner")
local C = Instance.new("TextButton")
local UICorner_19 = Instance.new("UICorner")
local TextButton_7 = Instance.new("TextButton")
local UICorner_20 = Instance.new("UICorner")
local TextButton_8 = Instance.new("TextButton")
local UICorner_21 = Instance.new("UICorner")
local TextButton_9 = Instance.new("TextButton")
local UICorner_22 = Instance.new("UICorner")
local UIPadding_2 = Instance.new("UIPadding")
local NumFrame = Instance.new("Frame")
local UIPadding_3 = Instance.new("UIPadding")
local UICorner_23 = Instance.new("UICorner")
local Text = Instance.new("TextLabel")

Calculator.Name = "Calculator"
Calculator.Parent = game:GetService("CoreGui")
Calculator.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainFrame.Name = "MainFrame"
MainFrame.Parent = Calculator
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(255, 177, 255)
MainFrame.Position = UDim2.new(0.5, 0, 0.49999994, 0)
MainFrame.Size = UDim2.new(0, 250, 0, 400)

UICorner.Parent = MainFrame

ButtonsFrame.Name = "ButtonsFrame"
ButtonsFrame.Parent = MainFrame
ButtonsFrame.BackgroundColor3 = Color3.fromRGB(255, 135, 255)
ButtonsFrame.Position = UDim2.new(0, 0, 0.248210549, 0)
ButtonsFrame.Size = UDim2.new(0, 230, 0, 285)

UICorner_2.Parent = ButtonsFrame

UIGridLayout.Parent = ButtonsFrame
UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.VerticalAlignment = Enum.VerticalAlignment.Center
UIGridLayout.CellSize = UDim2.new(0, 50, 0, 50)

_1.Name = "1"
_1.Parent = ButtonsFrame
_1.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
_1.LayoutOrder = 1
_1.Size = UDim2.new(0, 200, 0, 50)
_1.AutoButtonColor = false
_1.Font = Enum.Font.GothamBold
_1.Text = "1"
_1.TextColor3 = Color3.fromRGB(255, 255, 255)
_1.TextScaled = true
_1.TextSize = 14.000
_1.TextWrapped = true

UICorner_3.Parent = _1

UIPadding.Parent = ButtonsFrame
UIPadding.PaddingBottom = UDim.new(0, 5)
UIPadding.PaddingLeft = UDim.new(0, 7)
UIPadding.PaddingRight = UDim.new(0, 7)
UIPadding.PaddingTop = UDim.new(0, 5)

_2.Name = "2"
_2.Parent = ButtonsFrame
_2.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
_2.LayoutOrder = 2
_2.Size = UDim2.new(0, 200, 0, 50)
_2.AutoButtonColor = false
_2.Font = Enum.Font.GothamBold
_2.Text = "2"
_2.TextColor3 = Color3.fromRGB(255, 255, 255)
_2.TextScaled = true
_2.TextSize = 14.000
_2.TextWrapped = true

UICorner_4.Parent = _2

_3.Name = "3"
_3.Parent = ButtonsFrame
_3.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
_3.LayoutOrder = 3
_3.Size = UDim2.new(0, 200, 0, 50)
_3.AutoButtonColor = false
_3.Font = Enum.Font.GothamBold
_3.Text = "3"
_3.TextColor3 = Color3.fromRGB(255, 255, 255)
_3.TextScaled = true
_3.TextSize = 14.000
_3.TextWrapped = true

UICorner_5.Parent = _3

TextButton.Name = "+"
TextButton.Parent = ButtonsFrame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
TextButton.LayoutOrder = 4
TextButton.Size = UDim2.new(0, 200, 0, 50)
TextButton.AutoButtonColor = false
TextButton.Font = Enum.Font.GothamBold
TextButton.Text = "+"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true

UICorner_6.Parent = TextButton

_4.Name = "4"
_4.Parent = ButtonsFrame
_4.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
_4.LayoutOrder = 5
_4.Size = UDim2.new(0, 200, 0, 50)
_4.AutoButtonColor = false
_4.Font = Enum.Font.GothamBold
_4.Text = "4"
_4.TextColor3 = Color3.fromRGB(255, 255, 255)
_4.TextScaled = true
_4.TextSize = 14.000
_4.TextWrapped = true

UICorner_7.Parent = _4

_5.Name = "5"
_5.Parent = ButtonsFrame
_5.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
_5.LayoutOrder = 6
_5.Size = UDim2.new(0, 200, 0, 50)
_5.AutoButtonColor = false
_5.Font = Enum.Font.GothamBold
_5.Text = "5"
_5.TextColor3 = Color3.fromRGB(255, 255, 255)
_5.TextScaled = true
_5.TextSize = 14.000
_5.TextWrapped = true

UICorner_8.Parent = _5

_6.Name = "6"
_6.Parent = ButtonsFrame
_6.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
_6.LayoutOrder = 7
_6.Size = UDim2.new(0, 200, 0, 50)
_6.AutoButtonColor = false
_6.Font = Enum.Font.GothamBold
_6.Text = "6"
_6.TextColor3 = Color3.fromRGB(255, 255, 255)
_6.TextScaled = true
_6.TextSize = 14.000
_6.TextWrapped = true

UICorner_9.Parent = _6

TextButton_2.Name = "-"
TextButton_2.Parent = ButtonsFrame
TextButton_2.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
TextButton_2.LayoutOrder = 8
TextButton_2.Size = UDim2.new(0, 200, 0, 50)
TextButton_2.AutoButtonColor = false
TextButton_2.Font = Enum.Font.GothamBold
TextButton_2.Text = "-"
TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_2.TextScaled = true
TextButton_2.TextSize = 14.000
TextButton_2.TextWrapped = true

UICorner_10.Parent = TextButton_2

_7.Name = "7"
_7.Parent = ButtonsFrame
_7.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
_7.LayoutOrder = 9
_7.Size = UDim2.new(0, 200, 0, 50)
_7.AutoButtonColor = false
_7.Font = Enum.Font.GothamBold
_7.Text = "7"
_7.TextColor3 = Color3.fromRGB(255, 255, 255)
_7.TextScaled = true
_7.TextSize = 14.000
_7.TextWrapped = true

UICorner_11.Parent = _7

_8.Name = "8"
_8.Parent = ButtonsFrame
_8.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
_8.LayoutOrder = 10
_8.Size = UDim2.new(0, 200, 0, 50)
_8.AutoButtonColor = false
_8.Font = Enum.Font.GothamBold
_8.Text = "8"
_8.TextColor3 = Color3.fromRGB(255, 255, 255)
_8.TextScaled = true
_8.TextSize = 14.000
_8.TextWrapped = true

UICorner_12.Parent = _8

_9.Name = "9"
_9.Parent = ButtonsFrame
_9.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
_9.LayoutOrder = 11
_9.Size = UDim2.new(0, 200, 0, 50)
_9.AutoButtonColor = false
_9.Font = Enum.Font.GothamBold
_9.Text = "9"
_9.TextColor3 = Color3.fromRGB(255, 255, 255)
_9.TextScaled = true
_9.TextSize = 14.000
_9.TextWrapped = true

UICorner_13.Parent = _9

TextButton_3.Name = "/"
TextButton_3.Parent = ButtonsFrame
TextButton_3.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
TextButton_3.LayoutOrder = 12
TextButton_3.Size = UDim2.new(0, 200, 0, 50)
TextButton_3.AutoButtonColor = false
TextButton_3.Font = Enum.Font.GothamBold
TextButton_3.Text = "÷"
TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_3.TextScaled = true
TextButton_3.TextSize = 14.000
TextButton_3.TextWrapped = true

UICorner_14.Parent = TextButton_3

_0.Name = "0"
_0.Parent = ButtonsFrame
_0.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
_0.LayoutOrder = 14
_0.Size = UDim2.new(0, 200, 0, 50)
_0.AutoButtonColor = false
_0.Font = Enum.Font.GothamBold
_0.Text = "0"
_0.TextColor3 = Color3.fromRGB(255, 255, 255)
_0.TextScaled = true
_0.TextSize = 14.000
_0.TextWrapped = true

UICorner_15.Parent = _0

TextButton_4.Name = "."
TextButton_4.Parent = ButtonsFrame
TextButton_4.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
TextButton_4.LayoutOrder = 13
TextButton_4.Size = UDim2.new(0, 200, 0, 50)
TextButton_4.AutoButtonColor = false
TextButton_4.Font = Enum.Font.GothamBold
TextButton_4.Text = "."
TextButton_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_4.TextScaled = true
TextButton_4.TextSize = 14.000
TextButton_4.TextWrapped = true

UICorner_16.Parent = TextButton_4

TextButton_5.Name = "^"
TextButton_5.Parent = ButtonsFrame
TextButton_5.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
TextButton_5.LayoutOrder = 15
TextButton_5.Size = UDim2.new(0, 200, 0, 50)
TextButton_5.AutoButtonColor = false
TextButton_5.Font = Enum.Font.GothamBold
TextButton_5.Text = "aˣ"
TextButton_5.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_5.TextScaled = true
TextButton_5.TextSize = 14.000
TextButton_5.TextWrapped = true

UICorner_17.Parent = TextButton_5

TextButton_6.Name = "*"
TextButton_6.Parent = ButtonsFrame
TextButton_6.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
TextButton_6.LayoutOrder = 16
TextButton_6.Size = UDim2.new(0, 200, 0, 50)
TextButton_6.AutoButtonColor = false
TextButton_6.Font = Enum.Font.GothamBold
TextButton_6.Text = "×"
TextButton_6.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_6.TextScaled = true
TextButton_6.TextSize = 14.000
TextButton_6.TextWrapped = true

UICorner_18.Parent = TextButton_6

C.Name = "C"
C.Parent = ButtonsFrame
C.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
C.LayoutOrder = 17
C.Size = UDim2.new(0, 200, 0, 50)
C.AutoButtonColor = false
C.Font = Enum.Font.GothamBold
C.Text = "C"
C.TextColor3 = Color3.fromRGB(255, 255, 255)
C.TextScaled = true
C.TextSize = 14.000
C.TextWrapped = true

UICorner_19.Parent = C

TextButton_7.Name = "("
TextButton_7.Parent = ButtonsFrame
TextButton_7.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
TextButton_7.LayoutOrder = 18
TextButton_7.Size = UDim2.new(0, 200, 0, 50)
TextButton_7.AutoButtonColor = false
TextButton_7.Font = Enum.Font.GothamBold
TextButton_7.Text = "("
TextButton_7.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_7.TextScaled = true
TextButton_7.TextSize = 14.000
TextButton_7.TextWrapped = true

UICorner_20.Parent = TextButton_7

TextButton_8.Name = ")"
TextButton_8.Parent = ButtonsFrame
TextButton_8.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
TextButton_8.LayoutOrder = 18
TextButton_8.Size = UDim2.new(0, 200, 0, 50)
TextButton_8.AutoButtonColor = false
TextButton_8.Font = Enum.Font.GothamBold
TextButton_8.Text = ")"
TextButton_8.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_8.TextScaled = true
TextButton_8.TextSize = 14.000
TextButton_8.TextWrapped = true

UICorner_21.Parent = TextButton_8

TextButton_9.Name = "="
TextButton_9.Parent = ButtonsFrame
TextButton_9.BackgroundColor3 = Color3.fromRGB(255, 65, 255)
TextButton_9.LayoutOrder = 19
TextButton_9.Size = UDim2.new(0, 200, 0, 50)
TextButton_9.AutoButtonColor = false
TextButton_9.Font = Enum.Font.GothamBold
TextButton_9.Text = "="
TextButton_9.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_9.TextScaled = true
TextButton_9.TextSize = 14.000
TextButton_9.TextWrapped = true

UICorner_22.Parent = TextButton_9

UIPadding_2.Parent = MainFrame
UIPadding_2.PaddingBottom = UDim.new(0, 10)
UIPadding_2.PaddingLeft = UDim.new(0, 10)
UIPadding_2.PaddingRight = UDim.new(0, 10)
UIPadding_2.PaddingTop = UDim.new(0, 10)

NumFrame.Name = "NumFrame"
NumFrame.Parent = MainFrame
NumFrame.BackgroundColor3 = Color3.fromRGB(255, 135, 255)
NumFrame.Size = UDim2.new(0, 230, 0, 85)

UIPadding_3.Parent = NumFrame
UIPadding_3.PaddingBottom = UDim.new(0, 5)
UIPadding_3.PaddingLeft = UDim.new(0, 7)
UIPadding_3.PaddingRight = UDim.new(0, 7)
UIPadding_3.PaddingTop = UDim.new(0, 5)

UICorner_23.Parent = NumFrame

Text.Name = "Text"
Text.Parent = NumFrame
Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Text.BackgroundTransparency = 1.000
Text.Size = UDim2.new(0, 215, 0, 80)
Text.Font = Enum.Font.Gotham
Text.Text = "0"
Text.TextColor3 = Color3.fromRGB(255, 255, 255)
Text.TextScaled = true
Text.TextSize = 50.000
Text.TextWrapped = true
Text.TextXAlignment = Enum.TextXAlignment.Right



local numLabel = Calculator.MainFrame.NumFrame.Text

for _, v in pairs(Calculator.MainFrame.ButtonsFrame:GetChildren()) do
	if v:IsA("TextButton") then
		if v.Name == "=" then
			v.MouseButton1Click:Connect(function()
				local ran, val = pcall(loadstring("local res = (".. numLabel.Text .."); return res"))
				if ran then
					numLabel.Text = val
				else
					numLabel.Text = "Error"
				end
			end)
		elseif v.Name == "C" then
			v.MouseButton1Click:Connect(function()
				numLabel.Text = "0"
			end)
		else
			v.MouseButton1Click:Connect(function()
				if numLabel.Text == "0" or numLabel.Text == "Error" then
					numLabel.Text = ""
				end
				
				numLabel.Text = numLabel.Text.. v.Name
			end)
		end
	end
end

local UserInputService = game:GetService("UserInputService")
local gui = Calculator.MainFrame

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)

		    end
		end)
	end
})

-- Creature Prices Script (Scripts Tab)
local CreaturePricesSection = ScriptsTab:AddSection({
	Name = "Creature Prices"
})

CreaturePricesSection:AddButton({
	Name = "Open Creature Prices",
	Callback = function()
		-- Create the screen GUI
		local ScreenGui = Instance.new("ScreenGui")
		ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

		-- Create the main frame
		local MainFrame = Instance.new("Frame")
		MainFrame.Name = "CreatureFinderFrame"
		MainFrame.Parent = ScreenGui
		MainFrame.Size = UDim2.new(0.4, 0, 0.5, 0)
		MainFrame.Position = UDim2.new(0.3, 0, 0.25, 0)
		MainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MainFrame.Draggable = true

		-- Create the title label
		local TitleLabel = Instance.new("TextLabel")
		TitleLabel.Parent = MainFrame
		TitleLabel.Size = UDim2.new(1, 0, 0.1, 0)
		TitleLabel.BackgroundTransparency = 1
		TitleLabel.Text = "Creature Finder"
		TitleLabel.Font = Enum.Font.SourceSansBold
		TitleLabel.TextSize = 24
		TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TitleLabel.TextScaled = true

		-- Create the search box
		local SearchBox = Instance.new("TextBox")
		SearchBox.Parent = MainFrame
		SearchBox.Size = UDim2.new(0.9, 0, 0.1, 0)
		SearchBox.Position = UDim2.new(0.05, 0, 0.2, 0)
		SearchBox.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
		SearchBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
		SearchBox.PlaceholderText = "Search Creature..."
		SearchBox.TextScaled = true

		-- Create the scrolling frame for results
		local ScrollingFrame = Instance.new("ScrollingFrame")
		ScrollingFrame.Parent = MainFrame
		ScrollingFrame.Size = UDim2.new(0.9, 0, 0.6, 0)
		ScrollingFrame.Position = UDim2.new(0.05, 0, 0.35, 0)
		ScrollingFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
		ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)

		-- Create the minimize button
		local MinimizeButton = Instance.new("TextButton")
		MinimizeButton.Parent = MainFrame
		MinimizeButton.Size = UDim2.new(0.1, 0, 0.1, 0)
		MinimizeButton.Position = UDim2.new(0.8, 0, 0, 0) -- Positioned to the left of MaximizeButton
		MinimizeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
		MinimizeButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MinimizeButton.Text = "-"
		MinimizeButton.Font = Enum.Font.SourceSansBold
		MinimizeButton.TextSize = 24
		MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		MinimizeButton.TextScaled = true

		-- Create the maximize button
		local MaximizeButton = Instance.new("TextButton")
		MaximizeButton.Parent = ScreenGui
		MaximizeButton.Size = UDim2.new(0.1, 0, 0.1, 0)
		MaximizeButton.Position = UDim2.new(0.9, 0, 0, 0) -- Top right corner
		MaximizeButton.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
		MaximizeButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MaximizeButton.Text = "+"
		MaximizeButton.Font = Enum.Font.SourceSansBold
		MaximizeButton.TextSize = 24
		MaximizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		MaximizeButton.TextScaled = true
		MaximizeButton.Draggable = true
		MaximizeButton.Visible = true -- Initially visible

		-- Variable to track minimized state
		local isMinimized = true -- Starts minimized

		-- Function to toggle minimize/maximize state
		local function toggleMaximize()
		    isMinimized = not isMinimized
		    MainFrame.Visible = not isMinimized
		    if isMinimized then
		        MaximizeButton.Text = "+"
		    else
		        MaximizeButton.Text = "-"
		    end
		end

		-- Function to toggle minimize state
		local function toggleMinimize()
		    MainFrame.Visible = false
		    MaximizeButton.Visible = true
		end

		-- Connect the buttons to their respective toggle functions
		MaximizeButton.MouseButton1Click:Connect(toggleMaximize)
		MinimizeButton.MouseButton1Click:Connect(toggleMinimize)

		-- Create a list to store the result labels
		local ResultLabels = {}

		-- Creature locations data (abbreviated for brevity)
		local creatureLocations = {
	{"Arcabatur", "10k-20k"},
    {"Vivoltex", "2k-3k"},
    {"Akorbik", "2k-3k"},
    {"Phantejer", "3k-4k"}, 
    {"Nok'Tuun", "1k-2k"}, 
    {"Felifaux", "800-1k"},
    {"Zarrax", "2k-3k"},
    {"Inkpujin", "5k-6k"}, 
    {"Volcanic Eruption Summon Token", "2.5k-3k"},
    {"Thunderstorm Summon Token", "2.5k-3k"},
    {"Strong Glimmer Token", "350"},
    {"Weak Glimmer Token", "100"},
    {"Random Weather Token", "3k-5k"},
    {"Random Trial Creature Token", "50"},
    {"Random Gacha Spin Token", "25"}, 
    {"Partial Growth Token", "250"},
    {"Partial Mission Unlock Token", "1.5k"},
    {"Mufolium", "11k-14k"}, 
    {"Idrabark", "2k-3k"}, 
    {"Noxiouk", "2k-3k"}, 
    {"Revive Token", "500-600"},
    {"Max Growth Token", "450-500"},
    {"Full Mission Unlock Token", "2.5k-3k"},
    {"Blood Moon Summon Token", "3k"},
    {"Appearance Change Token", "100"}, 
    {"Starlit", "6k-9k"},
    {"Geortharoc", "12k-15k"},
    {"Aqoxturumox", "4k-5k"},
    {"Flipli", "1k-1.5k"},
    {"Lactarim", "2k-3k"},
    {"Firakai", "2.5k-3k"}, 
    {"Reeox", "2k-3k"},
    {"Galiryn", "10k-12k"}, 
    {"Meorlark", "2k-2.5k"}, 
    {"Noxulumen", "5k-6k"},
    {"Heiboktoruk", "2k-3k"},
    {"Lotremum", "4k-5k"},
    {"Irizah", "3k"},
    {"Ouratum", "3k-4.5k"}, 
    {"Caldonterrus", "28k-30k"}, 
    {"Noctla'Lune", "21k-25k"}, 
    {"Aidoneiscus", "4k-6k"},
    {"Bäruw", "4k-5k"}, 
    {"Ushrumesh", "1.5k"}, 
    {"Bolatra", "3.5k-4k"}, 
    {"Ardor Warden", "4k-5k"}, 
    {"Archinax", "0-200"}, 
    {"Altulis", "1.5k-2k"},
    {"Archalium", "1.5k-2k"},
    {"Arachyu", "6k-8k"}, 
    {"Apofuex", "500"},
    {"Aolenus", "30k-35k"}, 
    {"Anutill", "1.5k"},
    {"Ani", "800-1k"},
    {"Angelic Warden", "4k-6k"}, 
    {"Alkaksu", "50"},
    {"Amolis", "300"},
    {"Aleicuda", "600"}, 
    {"Ahri'Tahmuk", "1.5k-2k"},
    {"Aholai", "0-100"},
    {"Aesmir", "500"},
    {"Aesho", "0-100"},
    {"Aereis", "30k-60k"},
    {"Adharcaiin", "1k"},
    {"Asilvestrela", "4k"},
    {"Artikauk", "2k-2.5k"}, 
    {"Arsonos", "0-200"},
    {"Arrainoa", "0-100"},
    {"Arkmetta", "3k-4k"},
    {"Athulyth", "1.5k-2k"},
    {"Astrothi", "0-100"}, 
    {"Aueko", "500-600"}, 
    {"Avothius", "300-400"}, 
    {"Axothan", "200-500"}, 
    {"Bazelii", "5k"},
    {"Banishii", "5k"},
    {"Beezu", "0-100"}, 
    {"Belluvaraptor", "0-100"}, 
    {"Auraron", "1.5k-2k"},
    {"Bengon", "0-100"}, 
    {"Boreal Warden", "20k-25k"}, 
    {"Borenhir", "6k-7k"},
    {"Boskurro", "200-300"}, 
    {"Brequewk", "0-100"}, 
    {"Clovilowper", "10k-15k"}, 
    {"Cimidstik", "5k"},
    {"Buukon", "0-100"},
    {"Coniferon", "4k-5k"}, 
    {"Cantapodi", "0-100"}, 
    {"Cavengauu", "500"},
    {"Buff Eulopii", "1.5k-2k"}, 
    {"Cenicara", "1k-1.5k"},
    {"Celeritas", "400"},
    {"Chamei", "0-100"}, 
    {"Chisudo", "0-200"}, 
    {"Cimmabu", "500-1k"},
    {"Corsarlett", "5.5k-6k"}, 
    {"Chrysos", "0-100"}, 
    {"Citrulantis", "0-100"}, 
    {"Colval", "1k"},
    {"Corvurax", "60k-70k"}, 
    {"Cottol", "0-100"}, 
    {"Crata Peretina", "0-200"}, 
    {"Diokrine", "1k-2k"}, 
    {"Cryptoth", "3k"},
    {"Cucuerpum", "500"},
    {"Cupere", "700"},
    {"Cuxena", "3.5k-4k"}, 
    {"Dabaemura", "4k-5k"}, 
    {"Dalghara", "400"},
    {"Demetyra", "1.5k-2k"}, 
    {"Dantenos", "2k-3k"}, 
    {"Denjzi", "500"},
    {"Dunklaestus", "2k-3k"}, 
    {"Dieamarjla", "0-100"}, 
    {"Diesura", "0-100"}, 
    {"Doragonix", "0-100"}, 
    {"Dowatt", "500-1k"},
    {"Dragonixsauria", "0-100"}, 
    {"Dyaelatura", "2.5k-3k"}, 
    {"Eiroca", "500-1k"},
    {"Eigion Warden", "8k-12k"}, 
    {"Emphines", "0-100"}, 
    {"Empiterium", "1k-1.5k"}, 
    {"Equenix", "6k-7k"},
    {"Elarickkeir", "4k"},
    {"Erridea", "1k"},
    {"Etheralotus", "100k-200k"}, 
    {"Eulopii", "0-100"}, 
    {"Eskarlor", "2k"},
    {"Euvias", "0-100"}, 
    {"Exotide", "1k-1.5k"}, 
    {"Exterreri", "0-200"}, 
    {"Fabraashe", "3k"},
    {"Faecalu", "500-1k"}, 
    {"Fairiocris", "1.5k-2k"}, 
    {"Felikxtrox", "2k"},
    {"Fellisio", "500-1k"}, 
    {"Fleuralis", "2k"},
    {"Fernifly", "0-100"}, 
    {"Ferrah", "200"},
    {"Flamerir", "2k"},
    {"Flickaflie", "1k"},
    {"Flixlit", "0-300"}, 
    {"Fluren", "3k-4k"}, 
    {"Frigboa", "0-300"}, 
    {"Frigilinx", "2k"},
    {"Furnilixii", "3k-4k"}, 
    {"Fyluf", "500-1k"}, 
    {"Fyranili", "150"},
    {"Galeostra", "300"},
    {"Galtekron", "200-500"}, 
    {"Garra Warden", "8k-10k"}, 
    {"Geogoff", "250"},
    {"Geoptxina", "600"},
    {"Ghalgeya", "0-100"}, 
    {"Ghartokus", "5k-6k"}, 
    {"Ghibli", "1.5k"},
    {"Gloracus", "0-100"}, 
    {"Glovaucus", "2k"},
    {"Gnolrock", "3k"},
    {"Gobli", "300"},
    {"Golgaroth", "6k-7k"}, 
    {"Gorgonichus", "2k"},
    {"Gramoss", "300-400"}, 
    {"Grysallmog", "500-1k"}, 
    {"Gurava", "300"},
    {"Gyroudus", "2k"},
    {"Haechionx", "1k"},
    {"Halaqual", "1k-2k"}, 
    {"Gryvila", "2k"},
    {"Hebitoa", "4.5k"},
    {"Haxaline", "300"},
    {"Heisoteri", "3.5k"},
    {"Hellion Warden", "10k-15k"}, 
    {"Hemokai", "0-100"}, 
    {"Hikorshi", "0-100"}, 
    {"Hisolidium", "1k"},
    {"Hushike", "0-100"}, 
    {"Hyboria", "3k"},
    {"Hygos", "300"},
    {"Ibetchi", "8k-11k"}, 
    {"Ikoran", "0-100"}, 
    {"Imeaorn", "300"},
    {"Imini", "800-1k"},
    {"Irdegarde", "1k-2k"}, 
    {"Iztajuatl", "1k-2k"}, 
    {"Jabblebashhe", "500-1k"},
    {"Jeff", "0-100"}, 
    {"Jetebene", "500"},
    {"Jhiggo Jangl", "2k"},
    {"Jotunhel", "5k-6k"}, 
    {"Karakro", "1k-1.5k"}, 
    {"Kavouradis", "3k"},
    {"Kehkmador", "0-100"}, 
    {"Kemoti", "0-100"}, 
    {"Kendyll", "500"},
    {"Keruku", "90k-120k"}, 
    {"Khetheral", "0-100"}, 
    {"Khiku", "0-100"}, 
    {"Kiiwin", "0-100"}, 
    {"Kriprik", "0-100"}, 
    {"Kiridian", "0-100"}, 
    {"Knarliki", "0-100"}, 
    {"Kohikii", "50-100"}, 
    {"Koini", "6k"},
    {"Koipoise", "0-100"}, 
    {"Konomushi", "1.5k"},
    {"Korathos", "500-1k"},
    {"Koryser", "0-100"}, 
    {"Kretsnik", "500"},
    {"Kriffin", "0-100"}, 
    {"Kyiki", "800-1k"}, 
    {"Laharpes", "4.5k"},
    {"Laibonich", "1.5k"},
    {"Lenarabu", "1k"},
    {"Lerachu", "100"},
    {"Leurimess", "2k"},
    {"Levoneh", "4k"},
    {"Lissiceous", "0-100"}, 
    {"Lmakosauradon", "300"},
    {"Lorolael", "14k-15k"}, 
    {"Lucensia", "2k"},
    {"Lure", "500-1k"}, 
    {"Lus-Adarch", "4k"},
    {"Luxsces", "10k-12k"}, 
    {"Mag'Masta", "1.5k"},
    {"Magnacetus", "4k-5k"}, 
    {"Magnarothus", "0-100"}, 
    {"Maiueve", "1k"},
    {"Megalodystrix", "2.5k"},
    {"Mekmek", "500"},
    {"Menace", "6k-7k"}, 
    {"Miik", "0-100"}, 
    {"Mijusuima", "45k-50k"}, 
    {"Militrua", "100-200"}, 
    {"Minawii", "0-100"}, 
    {"Mobuushiy", "2k"},
    {"Moemoea", "0-100"}, 
    {"Molangai", "0-100"}, 
    {"Moluna", "4k"},
    {"Momola", "0-100"}, 
    {"Moonelle", "1k-2k"}, 
    {"Morcanix", "2k-3k"}, 
    {"Mordelium", "1k"},
    {"Morinus", "0-100"}, 
    {"Muravil", "6.5k-7k"}, 
    {"Murlk", "0-100"}, 
    {"Nachtskinhren", "1k"},
    {"Nakamaska", "500"},
    {"Nimoona", "0-100"}, 
    {"Norskogg", "1k"},
    {"Nindyr", "0-100"}, 
    {"Nolumoth", "1.5k"},
    {"Nuciffracoccu", "1k"},
    {"Nyctoxon", "1k-1.5k"}, 
    {"Nymphasuchus", "0-100"}, 
    {"Nytoltalus", "0-100"}, 
    {"Nyxasolyx", "300"},
    {"Olatua", "5k-6k"}, 
    {"Opralegion", "2k-3k"}, 
    {"Ovufu", "2k"},
    {"Owa'Stryrus", "100k-170k"}, 
    {"Oxdaizen", "300"},
    {"Oxytalis", "3k-4k"}, 
    {"Pacedegon", "15k"},
    {"Parahexilian", "14k-16k"}, 
    {"Paru-Gama", "10k-12k"}, 
    {"Parux", "300"},
    {"Pernirex", "0-100"}, 
    {"Pero", "0-100"}, 
    {"Phantaris", "7k"},
    {"Pierry", "600-1k"},
    {"Pliarys", "2.5k"},
    {"Phugu", "500-700"}, 
    {"Phyremia", "0-100"}, 
    {"Pterolythux", "1k"},
    {"Polymonstrum", "0-150"}, 
    {"Prabiki", "0-100"}, 
    {"Puffwump", "0-100"}, 
    {"Quezekel", "2k"},
    {"Qurugosk", "1k-1.5k"}, 
    {"Raiquazok", "500-1k"}, 
    {"Shararook", "500"},
    {"Ralokai", "0-100"}, 
    {"Reviiaton", "0-100"}, 
    {"Ripirin", "5k-6k"}, 
    {"Rorolo", "500-1k"}, 
    {"Rukig", "500-1k"}, 
    {"Saikarie", "0-100"}, 
    {"Salrahn", "2.5k-3k"}, 
    {"Sana'ata", "2k"},
    {"Sang Toare", "6k-8k"}, 
    {"Sarchias", "0-100"}, 
    {"Saukuryn", "1k-2k"}, 
    {"Seradae", "4k-6k"}, 
    {"Sigmatox", "150k-200k"}, 
    {"Sha'rei", "0-100"}, 
    {"Shiyaro", "0-100"}, 
    {"Shro", "0-100"}, 
    {"Skulderouge", "30k"}, 
    {"Slaiorn", "200"},
    {"Sleirnok", "500-900"}, 
    {"Sochuri", "0-100"}, 
    {"Somnia Elus", "300k-500k"}, 
    {"Squitico", "1k"},
    {"Starknol", "200"},
    {"Sturbi", "3k"},
    {"Sylvesqual", "2k-2.5k"}, 
    {"Syroudon", "800-1k"}, 
    {"Taiyuelong", "12k-14k"}, 
    {"Takamorath", "2k-4k"}, 
    {"Tarakotu", "1.5k"},
    {"Taurolystris", "0-100"}, 
    {"Teinook", "1.5k"},
    {"Therimorse", "6k"},
    {"Therokis", "3k"},
    {"Therolachus", "0-100"}, 
    {"Thykallos", "300"},
    {"Tohukos", "1.5k"},
    {"Torcherouk", "1.5k-2k"},
    {"Tornir", "9k-11k"}, 
    {"Traiboros", "0-100"}, 
    {"Trikylo", "500-1k"}, 
    {"Trutholbyeva", "1k"},
    {"Tsugae", "300"},
    {"Tundrik", "1.5k-2k"}, 
    {"Turgeon", "200"},
    {"Uleoum", "5k-7k"}, 
    {"Umbraxi", "4k-6k"}, 
    {"Verdant Warden", "1k-1.3k"}, 
    {"Verklixin", "0-100"}, 
    {"Undoli", "1.5k-2k"}, 
    {"Ura", "1.5k-2k"}, 
    {"Urzuk", "3k-5k"}, 
    {"Vahiaex", "1k"},
    {"Valkurse", "1k"},
    {"Valkyrie", "2k-3k"}, 
    {"Varskela", "3k"},
    {"Veldys", "4k-4.5k"}, 
    {"Venatrox", "100"},
    {"Veludorah", "200"},
    {"Venuella", "1k"},
    {"Vaumora", "100-300"}, 
    {"Veraiatrice", "4k"},
    {"Wuggawyrm", "500"},
    {"Vorpalus", "2k-3k"}, 
    {"Vin'rou", "0-100"}, 
    {"Vetemortem", "0-100"}, 
    {"Verza", "100k-150k"}, 
    {"Viracniar", "2k-3k"}, 
    {"Viridex", "3k"},
    {"Voletexius", "7k"},
    {"Volnoirve", "11.5k-13.5k"}, 
    {"Wewuix", "500-1k"}, 
    {"Whispthera", "5k"},
    {"Wixpectr'o", "2k-4k"}, 
    {"Woodralone", "4k-5k"}, 
    {"Wystora", "0-100"}, 
    {"Xenolif", "0-100"}, 
    {"Xeternos", "1.5k-2k"}, 
    {"Yama'tu", "0-100"}, 
    {"Yeba'idi", "2.5k"},
    {"Yenyasha", "0-100"}, 
    {"Yggdragstyx", "1k-2k"}, 
    {"Yiepir", "0-30"}, 
    {"Yohsog", "7k-8k"}, 
    {"Zeorex", "0-100"}, 
    {"Zethines", "100-200"}, 
    {"Zhelijin", "200-300"}, 
    {"Zieti", "1k"},
    {"Zohdok", "1.5k"},
    {"Zolbatros", "1k-2k"}, 
    {"Zoocuu", "500"},
    {"Zwevealisk", "300-600"}
		}

		-- Function to update the results list
		local function updateResults(searchTerm)
		    -- Clear previous results
		    for _, label in ipairs(ResultLabels) do
		        label:Destroy()
		    end
		    ResultLabels = {}

		    -- Filter creatures based on search term (case-insensitive)
		    local filteredCreatures = {}
		    searchTerm = string.lower(searchTerm) -- Convert search term to lowercase
		    for _, creatureData in ipairs(creatureLocations) do
		        local creatureName = string.lower(creatureData[1]) -- Convert creature name to lowercase
		        if string.find(creatureName, searchTerm) then
		            table.insert(filteredCreatures, creatureData)
		        end
		    end

		    -- Create and add result labels
		    local numResults = #filteredCreatures
		    if numResults == 0 then
		        -- Display "No creatures found" message
		        local noResultsLabel = Instance.new("TextLabel")
		        noResultsLabel.Parent = ScrollingFrame
		        noResultsLabel.Size = UDim2.new(1, 0, 0.1, 0)
		        noResultsLabel.BackgroundTransparency = 1
		        noResultsLabel.Text = "No creatures found."
		        noResultsLabel.Font = Enum.Font.SourceSans
		        noResultsLabel.TextSize = 20
		        noResultsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		        noResultsLabel.TextScaled = true
		        table.insert(ResultLabels, noResultsLabel)
		    else
		        -- Display creature locations
		        for i, creatureData in ipairs(filteredCreatures) do
		            local resultLabel = Instance.new("TextLabel")
		            resultLabel.Parent = ScrollingFrame
		            resultLabel.Size = UDim2.new(1, 0, 0.1, 0)
		            resultLabel.Position = UDim2.new(0, 0, (i - 1) * 0.1, 0)
		            resultLabel.BackgroundTransparency = 1
		            resultLabel.Text = creatureData[1] .. " is commonly found in: " .. creatureData[2]
		            resultLabel.Font = Enum.Font.SourceSans
		            resultLabel.TextSize = 20
		            resultLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		            resultLabel.TextScaled = true
		            table.insert(ResultLabels, resultLabel)
		        end
		    end

		    -- Adjust canvas size based on the number of results
		    ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, numResults * 0.1)
		end

		-- Connect search box to update results
		SearchBox:GetPropertyChangedSignal("Text"):Connect(function()
		    updateResults(SearchBox.Text)
		end)

		-- Initial update
		updateResults("")
	end
})
